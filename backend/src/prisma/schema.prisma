// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(cuid())
  email          String  @unique
  name           String
  passwordHash   String
  role           String
  avatar         String?
  teams          Team[]  @relation("TeamMembers")
  captainedTeams Team[]  @relation("TeamCaptain")
}

model Team {
  id             String       @id @default(cuid())
  name           String       @unique
  game           String
  captain        User         @relation("TeamCaptain", fields: [captainId], references: [id])
  captainId      String
  members        User[]       @relation("TeamMembers")
  tournaments    Tournament[]
  matchesAsTeam1 Match[]      @relation("Team1Matches")
  matchesAsTeam2 Match[]      @relation("Team2Matches")
  wins           Int          @default(0)
  losses         Int          @default(0)
  draws          Int          @default(0)
}

model Tournament {
  id        String           @id @default(cuid())
  name      String
  game      String
  format    String
  prizePool Float
  startDate DateTime
  status    TournamentStatus @default(REGISTRATION)
  teams     Team[]
  matches   Match[]
}

model Match {
  id           String      @id @default(cuid())
  team1        Team        @relation("Team1Matches", fields: [team1Id], references: [id])
  team1Id      String
  team2        Team        @relation("Team2Matches", fields: [team2Id], references: [id])
  team2Id      String
  score        String?
  status       MatchStatus @default(PLANNED)
  scheduledAt  DateTime
  finishedAt   DateTime?
  tournament   Tournament? @relation(fields: [tournamentId], references: [id])
  tournamentId String?
}

enum MatchStatus {
  PLANNED
  LIVE
  FINISHED
  DISPUTED
}

enum TournamentStatus {
  REGISTRATION
  ONGOING
  FINISHED
}

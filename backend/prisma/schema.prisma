// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  name           String
  passwordHash   String
  role           Role      @default(PLAYER)
  avatar         String?
  xp             Int       @default(0)
  status         String    @default("Активен")
  dateOfBirth    DateTime?
  location       String?
  mainSport      String?
  isVerified     Boolean   @default(false)
  preferredSports String[]
  contacts       Json?

  teamsAsCaptain Team[]    @relation("CaptainTeams")
  teams          Team[]    @relation("TeamMembers")
  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Team {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  logo        String?
  dataAiHint  String?
  motto       String?
  game        String
  description String?
  rank        Int?     @default(99)
  wins        Int      @default(0)
  losses      Int      @default(0)
  draws       Int      @default(0)

  captainId String
  captain   User   @relation("CaptainTeams", fields: [captainId], references: [id])

  members   User[] @relation("TeamMembers")

  tournaments Tournament[] @relation("TeamTournaments")
  
  matchesAsTeam1 Match[] @relation("Team1Matches")
  matchesAsTeam2 Match[] @relation("Team2Matches")

  homePlaygroundId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tournament {
  id              String            @id @default(cuid())
  name            String
  slug            String            @unique
  game            String
  format          TournamentFormat  @default(SINGLE_ELIMINATION)
  status          TournamentStatus  @default(REGISTRATION)
  prizePool       Float
  startDate       DateTime
  bannerImage     String?
  bannerImageHint String?

  teams   Team[]  @relation("TeamTournaments")
  matches Match[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Match {
  id          String      @id @default(cuid())
  status      MatchStatus @default(PLANNED)
  scheduledAt DateTime
  finishedAt  DateTime?
  location    String?
  refereeName String?

  team1Id    String
  team2Id    String
  team1      Team   @relation("Team1Matches", fields: [team1Id], references: [id])
  team2      Team   @relation("Team2Matches", fields: [team2Id], references: [id])
  team1Score Int?
  team2Score Int?
  
  tournamentId String?
  tournament   Tournament? @relation(fields: [tournamentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum Role {
  PLAYER
  CAPTAIN
  COACH
  JUDGE
  MANAGER
  MODERATOR
  ORGANIZER
  SPONSOR
  FAN
  ADMINISTRATOR
}

enum TournamentFormat {
  SINGLE_ELIMINATION
  ROUND_ROBIN
}

enum TournamentStatus {
  REGISTRATION
  ONGOING
  FINISHED
  CANCELLED
}

enum MatchStatus {
  PLANNED
  LIVE
  FINISHED
  DISPUTED
  CANCELLED
}

# Этот файл содержит переопределения для непрерывной интеграции (CI)
# Он не предназначен для запуска всех сервисов, а только для сборки и тестирования

services:
  # Сервис для базы данных приложения, используемый в CI
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-prodvor}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 60s
    networks:
      - default

  # Сервис для базы данных Kong
  kong-db:
    image: postgres:15-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong_db}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KONG_PG_USER:-kong} -d ${KONG_PG_DATABASE:-kong_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  # Сервис для выполнения миграций Kong в CI
  # Он запускается как одноразовая задача
  kong-migrations-ci:
    image: kong:latest
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kongpassword}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong_db}
    # Команда bootstrap создаст схему, если ее нет
    command: kong migrations bootstrap
    networks:
      - default

  # Сервис для выполнения миграций Prisma
  # Использует уже собранный образ 'backend', чтобы не пересобирать его
  migrations:
    build:
      context: .
      dockerfile: backend/Dockerfile
    # Зависит от готовности основной базы данных
    depends_on:
      db:
        condition: service_healthy
    working_dir: /usr/src/app
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    # Команда применяет уже созданные миграции
    command: pnpm --filter prodvor-backend prisma:migrate:deploy
    networks:
      - default

networks:
  default:

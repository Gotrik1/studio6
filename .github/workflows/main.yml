
name: Docker Compose CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env for docker-compose
        run: |
          cat > .env <<EOF
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          KEYCLOAK_ADMIN=${{ secrets.KEYCLOAK_ADMIN }}
          KEYCLOAK_ADMIN_PASSWORD=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
          KEYCLOAK_DB_USER=${{ secrets.KEYCLOAK_DB_USER }}
          KEYCLOAK_DB_PASSWORD=${{ secrets.KEYCLOAK_DB_PASSWORD }}
          KEYCLOAK_DB_DATABASE=${{ secrets.KEYCLOAK_DB_DATABASE }}
          KONG_PG_USER=${{ secrets.KONG_PG_USER }}
          KONG_PG_PASSWORD=${{ secrets.KONG_PG_PASSWORD }}
          KONG_PG_DATABASE=${{ secrets.KONG_PG_DATABASE }}
          KONG_ADMIN_LISTEN=${{ secrets.KONG_ADMIN_LISTEN }}
          KONG_PROXY_LISTEN=${{ secrets.KONG_PROXY_LISTEN }}
          DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@db:5432/${{ secrets.POSTGRES_DB }}?schema=public
          REDIS_URL=redis://redis:6379
          KAFKA_BROKERS=kafka:9092
          KEYCLOAK_URL=http://keycloak:8080
          KEYCLOAK_REALM=prodvor
          KEYCLOAK_CLIENT_ID=prodvor-frontend
          RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
          RABBITMQ_DEFAULT_PASSWORD=${{ secrets.RABBITMQ_DEFAULT_PASSWORD }}
          RABBITMQ_URL=amqp://${{ secrets.RABBITMQ_DEFAULT_USER }}:${{ secrets.RABBITMQ_DEFAULT_PASSWORD }}@rabbitmq:5672
          NEXT_PUBLIC_BACKEND_URL=http://kong:8000
          EOF

      - name: Launch all services
        run: docker-compose up -d --build

      - name: Show backend logs on failure
        if: failure()
        run: docker-compose logs backend

      - name: Install frontend dependencies
        run: npm install --workspace=frontend

      - name: Lint frontend
        run: npm run lint --workspace=frontend

      - name: Typecheck frontend
        run: npm run typecheck --workspace=frontend

      - name: Build frontend
        run: npm run build --workspace=frontend

      - name: Show frontend logs on failure
        if: failure()
        run: docker-compose logs frontend

      - name: Tear down
        if: always()
        run: docker-compose down -v

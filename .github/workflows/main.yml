
name: Docker Compose CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file from secrets
        run: |
          cat > .env <<EOF
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          KC_DB_DATABASE=${{ secrets.KC_DB_DATABASE }}
          KC_DB_USERNAME=${{ secrets.KC_DB_USERNAME }}
          KC_DB_PASSWORD=${{ secrets.KC_DB_PASSWORD }}
          KC_BOOTSTRAP_ADMIN_USERNAME=${{ secrets.KC_BOOTSTRAP_ADMIN_USERNAME }}
          KC_BOOTSTRAP_ADMIN_PASSWORD=${{ secrets.KC_BOOTSTRAP_ADMIN_PASSWORD }}
          KONG_PG_PASSWORD=${{ secrets.KONG_PG_PASSWORD }}
          RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}
          RABBITMQ_DEFAULT_PASSWORD=${{ secrets.RABBITMQ_DEFAULT_PASSWORD }}
          MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}
          DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@db:5432/${{ secrets.POSTGRES_DB }}?schema=public
          REDIS_URL=redis://redis:6379
          KAFKA_BROKERS=kafka:9092
          KEYCLOAK_URL=http://keycloak:8080
          KEYCLOAK_REALM=prodvor
          KEYCLOAK_CLIENT_ID=prodvor-frontend
          RABBITMQ_URL=amqp://${{ secrets.RABBITMQ_DEFAULT_USER }}:${{ secrets.RABBITMQ_DEFAULT_PASSWORD }}@rabbitmq:5672
          S3_ENDPOINT_URL=http://minio:9005
          S3_BUCKET_NAME=prodvor
          AWS_REGION=us-east-1
          AWS_ACCESS_KEY_ID=${{ secrets.MINIO_ROOT_USER }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.MINIO_ROOT_PASSWORD }}
          NEXT_PUBLIC_BACKEND_URL=http://kong:8000
          PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          EOF
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and cache backend image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./backend/Dockerfile
          load: true
          tags: prodvor/backend:latest
          cache-from: type=gha,scope=backend
          cache-to: type=gha,mode=max,scope=backend

      - name: Build and cache frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./frontend/Dockerfile
          load: true
          tags: prodvor/frontend:latest
          cache-from: type=gha,scope=frontend
          cache-to: type=gha,mode=max,scope=frontend
      
      - name: Launch all services
        run: docker compose --verbose -f docker-compose.yml -f docker-compose.ci.yml up -d --wait

      - name: Run Prisma migrations
        run: docker compose --verbose exec backend pnpm prisma:migrate:deploy

      - name: Check container statuses
        run: docker compose --verbose ps

      - name: Show Main DB logs on failure
        if: failure()
        run: docker compose --verbose logs db

      - name: Show Keycloak DB logs on failure
        if: failure()
        run: docker compose --verbose logs keycloak-db

      - name: Show backend logs on failure
        if: failure()
        run: docker compose --verbose logs backend

      - name: Show frontend logs on failure
        if: failure()
        run: docker compose --verbose logs frontend

      - name: Show Keycloak logs on failure
        if: failure()
        run: docker compose --verbose logs keycloak

      - name: Show Kafka logs on failure
        if: failure()
        run: docker compose --verbose logs kafka
      
      - name: Show Kong logs on failure
        if: failure()
        run: docker compose --verbose logs kong
      
      - name: Show Minio logs on failure
        if: failure()
        run: docker compose --verbose logs minio

      - name: Lint code
        run: pnpm run lint

      - name: Typecheck code
        run: pnpm run typecheck

      - name: Build frontend
        run: pnpm --filter prodvor-frontend build

      - name: Tear down
        if: always()
        run: docker compose --verbose -f docker-compose.yml -f docker-compose.ci.yml down -v

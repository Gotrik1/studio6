version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: prodvor_user
      POSTGRES_PASSWORD: very_strong_password
      POSTGRES_DB: prodvor_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prodvor_user -d prodvor_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run start:dev

  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    ports:
      - "9002:9002"
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

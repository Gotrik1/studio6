{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/studio/frontend/src/routes.ts"],"sourcesContent":["/**\n * An array of routes that are accessible to the public.\n * These routes do not require authentication.\n * @type {string[]}\n */\nexport const publicRoutes = [\n    \"/\",\n];\n\n/**\n * An array of routes that are used for authentication.\n * These routes will redirect logged in users to /dashboard.\n * @type {string[]}\n */\nexport const authRoutes = [\n    \"/auth\",\n];\n\n/**\n * The prefix for API authentication routes.\n * Routes that start with this prefix are used for API authentication purposes.\n * @type {string}\n */\nexport const apiAuthPrefix = \"/api/auth\";\n\n\n/**\n * The default redirect path after logging in.\n * @type {string}\n */\nexport const DEFAULT_LOGIN_REDIRECT = \"/dashboard\";\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;AACM,MAAM,eAAe;IACxB;CACH;AAOM,MAAM,aAAa;IACtB;CACH;AAOM,MAAM,gBAAgB;AAOtB,MAAM,yBAAyB"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/studio/frontend/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport {\n  DEFAULT_LOGIN_REDIRECT,\n  apiAuthPrefix,\n  authRoutes,\n  publicRoutes,\n} from '@/routes';\n\nexport function middleware(request: NextRequest) {\n  const { nextUrl } = request;\n  const session = request.cookies.get('session');\n  const isLoggedIn = !!session;\n\n  const isApiAuthRoute = nextUrl.pathname.startsWith(apiAuthPrefix);\n  const isPublicRoute = publicRoutes.includes(nextUrl.pathname);\n  const isAuthRoute = authRoutes.includes(nextUrl.pathname);\n\n  if (isApiAuthRoute) {\n    return NextResponse.next();\n  }\n\n  if (isAuthRoute) {\n    if (isLoggedIn) {\n      return NextResponse.redirect(new URL(DEFAULT_LOGIN_REDIRECT, nextUrl));\n    }\n    return NextResponse.next();\n  }\n  \n  if (!isLoggedIn && !isPublicRoute) {\n    return NextResponse.redirect(new URL('/auth', nextUrl));\n  }\n  \n  return NextResponse.next();\n}\n\n// Optionally, don't invoke Middleware on some paths\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAOO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,OAAO,EAAE,GAAG;IACpB,MAAM,UAAU,QAAQ,OAAO,CAAC,GAAG,CAAC;IACpC,MAAM,aAAa,CAAC,CAAC;IAErB,MAAM,iBAAiB,QAAQ,QAAQ,CAAC,UAAU,CAAC,2IAAA,CAAA,gBAAa;IAChE,MAAM,gBAAgB,2IAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,QAAQ,QAAQ;IAC5D,MAAM,cAAc,2IAAA,CAAA,aAAU,CAAC,QAAQ,CAAC,QAAQ,QAAQ;IAExD,IAAI,gBAAgB;QAClB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,IAAI,aAAa;QACf,IAAI,YAAY;YACd,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,2IAAA,CAAA,yBAAsB,EAAE;QAC/D;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,IAAI,CAAC,cAAc,CAAC,eAAe;QACjC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS;IAChD;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;AAChE"}}]
}